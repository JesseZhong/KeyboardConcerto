<ResourceDictionary x:Class="KeyboardConcerto.WindowTemplate"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customWindow="clr-namespace:KeyboardConcerto.CustomWindow">
	<!-- Resource dictionary entries should be defined here. -->

	<!-- Window Properties -->
    <LinearGradientBrush x:Key="WindowBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#265BA5AF" Offset="0"/>
        <GradientStop Color="#26FFFFFF" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="WindowBorderBrush" Color="#55000000" />
    <LinearGradientBrush x:Key="TopBarBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="Black" Offset="0"/>
        <GradientStop Color="#FF1A1A1A" Offset="1"/>
        <GradientStop Color="#FF020202" Offset="0.349"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TopBarBorderBrush" Color="Black" />
    <LinearGradientBrush x:Key="BottomBarBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF020202" Offset="1"/>
        <GradientStop Color="#FF1A1A1A"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BottomBarBorderBrush" Color="Black" />

    <!-- Button Properties -->
    <Setter x:Key="ButtonBackground" Property="Button.Background">
        <Setter.Value>
            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#265BA5AF" Offset="0"/>
                <GradientStop Color="#26FFFFFF" Offset="1"/>
            </LinearGradientBrush>
        </Setter.Value>
    </Setter>
    <Setter x:Key="ButtonBorderBrush" Property="Button.BorderBrush">
        <Setter.Value>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF1A1A1A" Offset="0"/>
                <GradientStop Color="#FF020202" Offset="0.349"/>
                <GradientStop Color="Black" Offset="1"/>
            </LinearGradientBrush>
        </Setter.Value>
    </Setter>
    <Setter x:Key="ButtonForeground" Property="Button.Foreground" Value="White" />
    <Setter x:Key="ButtonFontSize" Property="Button.FontSize" Value="14" />
    <Setter x:Key="ButtonSnapsToDevicePixels" Property="Button.SnapsToDevicePixels" Value="True" />
    <Setter x:Key="ButtonWidth" Property="Button.Width" Value="68" />
    <Setter x:Key="ButtonHeight" Property="Button.Height" Value="48" />

    <!-- Button Mouse Over Properities -->
    <Setter x:Key="ButtonMouseOverBackground" Property="Button.Background">
        <Setter.Value>
            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#4C5BA5AF" Offset="0"/>
                <GradientStop Color="#4CFFFFFF" Offset="1"/>
            </LinearGradientBrush>
        </Setter.Value>
    </Setter>
    <Setter x:Key="ButtonMouseOverForeground" Property="Button.Foreground" Value="White" />
    <Setter x:Key="ButtonMousePressedBackground" Property="Button.Background" Value="DarkSlateGray" />
    <Setter x:Key="ButtonMousePressedForeground" Property="Button.Foreground" Value="White" />


    <!-- Window Style -->
    <Style x:Key="OpticWindow" TargetType="{x:Type Window}">

        <!-- Background Color/Gradient -->
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <EventSetter Event="Loaded" Handler="WindowLoaded" />

        <!-- Window Template and Layout -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    
                    <Border x:Name="MainBorder" BorderBrush="{DynamicResource WindowBorderBrush}"
                            BorderThickness="0,1" CornerRadius="1">
                        <DockPanel x:Name="DockPanel" Background="{DynamicResource WindowBackground}">
                            <Grid>
                                <!-- Top Bar -->
                                <Border x:Name="TopBar" Margin="0,0" Background="{DynamicResource TopBarBackground}" RenderTransformOrigin="0.5,0.5" 
										Height="39" VerticalAlignment="Top" HorizontalAlignment="Stretch" MouseMove="Header_MouseMove" 
										BorderBrush="{DynamicResource TopBarBorderBrush}" BorderThickness="1,0" >
                                    <Border x:Name="WindowButtonsPlaceholder" 
										HorizontalAlignment="Right" 
										VerticalAlignment="Top" 
										Margin="0,-1,0,0">
                                        <StackPanel>
                                        </StackPanel>
                                    </Border>
                                </Border>

                                <!-- Bottom Bar -->
                                <Border x:Name="BottomBar" Background="{DynamicResource BottomBarBackground}" BorderBrush="{DynamicResource BottomBarBorderBrush}" 
										BorderThickness="1,0" VerticalAlignment="Bottom" Height="20.8" />
                            </Grid>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Style -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="FontSize" Value="{DynamicResource ButtonFontSize}" />
        <Setter Property="SnapsToDevicePixels" Value="{DynamicResource ButtonSnapsToDevicePixels}" />
        <Setter Property="Width" Value="{DynamicResource ButtonWidth}" />
        <Setter Property="Height" Value="{DynamicResource ButtonHeight}" />

        <!-- Button Template and Layout -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <!-- Basic Appearance -->
                    <Border CornerRadius="1" BorderThickness="1" BorderBrush="{DynamicResource ButtonBorderBrush}" Background="{DynamicResource ButtonBackground}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <!-- Trigger Appearances -->
                    <ControlTemplate.Triggers>

                        <!-- Mouse Over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonMouseOverForeground}" />
                        </Trigger>

                        <!-- Mouse Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonMousePressedBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonMousePressedForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>