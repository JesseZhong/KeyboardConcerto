<ResourceDictionary x:Class="KeyboardConcerto.Theme.WindowTemplate"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">
	<!-- Resource dictionary entries should be defined here. -->

	<!-- Window Properties -->
    <LinearGradientBrush x:Key="WindowBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#265BA5AF" Offset="0"/>
        <GradientStop Color="#26FFFFFF" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="WindowBorderBrush" Color="#55000000" />
    <LinearGradientBrush x:Key="TopBarBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="Black" Offset="0"/>
        <GradientStop Color="#FF1A1A1A" Offset="1"/>
        <GradientStop Color="#FF020202" Offset="0.349"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TopBarBorderBrush" Color="Black" />
    <LinearGradientBrush x:Key="BottomBarBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF020202" Offset="1"/>
        <GradientStop Color="#FF1A1A1A"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BottomBarBorderBrush" Color="Black" />

    <!-- Button Properties -->
    <LinearGradientBrush x:Key="ButtonBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#265BA5AF" Offset="0"/>
        <GradientStop Color="#26FFFFFF" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF1A1A1A" Offset="0"/>
        <GradientStop Color="#FF020202" Offset="0.349"/>
        <GradientStop Color="Black" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonForeground" Color="White" />
    <sys:Double x:Key="ButtonFontSize">14</sys:Double>
    <sys:Boolean x:Key="ButtonSnapsToDevicePixels">True</sys:Boolean>
    <sys:Double x:Key="ButtonWidth">68</sys:Double>
    <sys:Double x:Key="ButtonHeight">48</sys:Double>

    <!-- Button Mouse Over Properities -->
    <LinearGradientBrush x:Key="ButtonMouseOverBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#4C5BA5AF" Offset="0"/>
        <GradientStop Color="#4CFFFFFF" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonMouseOverForeground" Color="White" />
    <SolidColorBrush x:Key="ButtonMousePressedBackground" Color="DarkSlateGray" />
    <SolidColorBrush x:Key="ButtonMousePressedForeground" Color="White" />


    <!-- Window Style -->
    <Style x:Key="OpticWindow" TargetType="{x:Type Window}">

        <!-- Background Color/Gradient -->
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="Transparent" />

        <!-- Window Template and Layout -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    
                    <Border x:Name="MainBorder" BorderBrush="{DynamicResource WindowBorderBrush}"
                            BorderThickness="0,1" CornerRadius="1">
                        <DockPanel x:Name="DockPanel" Background="{DynamicResource WindowBackground}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                
                                <!-- Top Bar -->
                                <Border Grid.Row="0" x:Name="TopBar" Margin="0,0" Background="{DynamicResource TopBarBackground}" RenderTransformOrigin="0.5,0.5" 
										Height="39" VerticalAlignment="Top" HorizontalAlignment="Stretch" MouseMove="TopBar_MouseMove" 
										BorderBrush="{DynamicResource TopBarBorderBrush}" BorderThickness="1,0" >
                                    <Border x:Name="WindowButtonsPlaceholder" 
										HorizontalAlignment="Right" 
										VerticalAlignment="Top" 
										Margin="0,-1,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <Button x:Name="MinimizeButton" Style="{DynamicResource MinimizeButton}" Margin="-1,0,0,0" Click="OnMinimizeButton_Click" />
                                            <Button x:Name="CloseButton" Style="{DynamicResource CloseButton}" Margin="-1,0,0,0" Click="OnCloseButton_Click" />
                                        </StackPanel>
                                    </Border>
                                </Border>
                                
                                <!-- Content Area -->
                                <ContentPresenter Grid.Row="1" Content="{DynamicResource WindowContentArea}"/>

                                <!-- Bottom Bar -->
                                <Border Grid.Row="2" x:Name="BottomBar" Background="{DynamicResource BottomBarBackground}" BorderBrush="{DynamicResource BottomBarBorderBrush}" 
										BorderThickness="1,0" VerticalAlignment="Bottom" Height="20.8" />
                            </Grid>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Style -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="FontSize" Value="{DynamicResource ButtonFontSize}" />
        <Setter Property="SnapsToDevicePixels" Value="{DynamicResource ButtonSnapsToDevicePixels}" />
        <Setter Property="Width" Value="{DynamicResource ButtonWidth}" />
        <Setter Property="Height" Value="{DynamicResource ButtonHeight}" />

        <!-- Button Template and Layout -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" x:Name="ButtonTemplate">

                    <!-- Basic Appearance -->
                    <Border x:Name="HighlightBorder" CornerRadius="1" BorderThickness="1" 
                            BorderBrush="{DynamicResource ButtonBorderBrush}" 
                            Background="{DynamicResource ButtonBackground}">
                        <Grid>
                            <TextBlock x:Name="ButtonText" Text="{Binding Content, RelativeSource={RelativeSource AncestorType=Button}}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <!-- Trigger Appearances -->
                    <ControlTemplate.Triggers>

                        <!-- Mouse Over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HighlightBorder" Property="Background" Value="{DynamicResource ButtonMouseOverBackground}" />
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{DynamicResource ButtonMouseOverForeground}" />
                        </Trigger>

                        <!-- Mouse Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HighlightBorder" Property="Background" Value="{DynamicResource ButtonMousePressedBackground}" />
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{DynamicResource ButtonMousePressedForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Window Button Basic Styling -->
    <Style x:Key="WindowButton"  TargetType="{x:Type Button}">
        <Style.Resources>
            <LinearGradientBrush x:Key="WindowButtonHighlight" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#ADCEE8" Offset="0" />
                <GradientStop Color="#70A3C7" Offset="0.45" />
                <GradientStop Color="#1E6FA5" Offset="0.45" />
                <GradientStop Color="#2782B4" Offset="0.80" />
                <GradientStop Color="#17FBFA" Offset="1" />
            </LinearGradientBrush>
        </Style.Resources>
        
        <Setter Property="Width" Value="26" />
        <Setter Property="Height" Value="16" />
        <Setter Property="BorderBrush" Value="#4C5258" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#1AE2EAF3" Offset="0.325"/>
                    <GradientStop Color="#00B4C3DB" Offset="1"/>
                    <GradientStop Color="#00E2EAF3"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" 
                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Border x:Name="HighlightBorder">
                                <ContentPresenter Content="{DynamicResource WindowButtonContent}" Margin="0,-1,0,0" />
                            </Border>
                            <Border x:Name="WhiteBorder" BorderBrush="#88FFFFFF" BorderThickness="1,0,1,1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HighlightBorder" Property="Background" 
                                    Value="{DynamicResource WindowButtonHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Minimize Button Style -->
    <Style x:Key="MinimizeButton" TargetType="Button" BasedOn="{StaticResource WindowButton}">
        <Style.Resources>
            <Border x:Key="WindowButtonContent" Width="12" Height="5" Margin="0,5,0,0" BorderBrush="#535666" BorderThickness="1" Background="#FFFFFF" />
        </Style.Resources>
    </Style>

    <!-- Close Button Style -->
    <Style x:Key="CloseButton" TargetType="Button" BasedOn="{StaticResource WindowButton}">
        <Style.Resources>
            <Image x:Key="WindowButtonContent" Source="pack://application:,,,/KeyboardConcerto;Component/Theme/Images/buttonX.png" Width="13" Height="10" />
            <LinearGradientBrush x:Key="WindowButtonHighlight" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0" Color="#F89C8C" />
                <GradientStop Offset="0.45" Color="#E36A53" />
                <GradientStop Offset="0.45" Color="#C72B0E" />
                <GradientStop Offset="0.75" Color="#D44310" />
                <GradientStop Offset="1" Color="#F5E478" />
            </LinearGradientBrush>
        </Style.Resources>
    </Style>
</ResourceDictionary>