<ResourceDictionary x:Class="KeyboardConcerto.Theme.OpticTheme"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">
	<!-- Resource dictionary entries should be defined here. -->

	<!-- Window Properties -->
    <LinearGradientBrush x:Key="WindowBackground" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FF9B59B6" Offset="0.988"/>
        <GradientStop Color="#FF3498DB" Offset="0.288"/>
        </LinearGradientBrush>
    <SolidColorBrush x:Key="WindowBorderBrush" Color="#55000000" />
    <SolidColorBrush x:Key="TopBarBackground" Color="#FF141414" />
    <SolidColorBrush x:Key="TopBarBorderBrush" Color="Black" />
    <SolidColorBrush x:Key="TopBarForeground" Color="#FF3498DB" />
    <FontFamily x:Key="WindowFontFamily">OpenSans</FontFamily>
    <sys:Double x:Key="WindowFontSize">11</sys:Double>

    <!-- Button Properties -->
    <SolidColorBrush x:Key="ButtonBackground" Color="#12FFFFFF" />
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="Transparent" />
    <SolidColorBrush x:Key="ButtonForeground" Color="White" />
    <sys:Double x:Key="ButtonFontSize">12</sys:Double>
    <sys:Boolean x:Key="ButtonSnapsToDevicePixels">True</sys:Boolean>

    <!-- Button Mouse Over Properities -->
    <SolidColorBrush x:Key="ButtonMouseOverBackground" Color="#28FFFFFF" />
    <SolidColorBrush x:Key="ButtonMouseOverForeground" Color="White" />
    <SolidColorBrush x:Key="ButtonMousePressedBackground" Color="#6CFFFFFF" />
    <SolidColorBrush x:Key="ButtonMousePressedForeground" Color="White" />


    <!-- Window Style -->
    <Style x:Key="OpticWindow" TargetType="{x:Type Window}">

        <!-- Background Color/Gradient -->
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="Transparent" />

        <!-- Window Template and Layout -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    
                    <Border x:Name="MainBorder" BorderBrush="{StaticResource WindowBorderBrush}" BorderThickness="0">
                        <DockPanel x:Name="DockPanel">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                
                                <!-- Top Bar -->
                                <Border Grid.Row="0" x:Name="TopBar" Margin="0,-1" Background="{DynamicResource TopBarBackground}" RenderTransformOrigin="0.5,0.5" 
										Height="20" VerticalAlignment="Top" HorizontalAlignment="Stretch" CornerRadius="2,2,0,0" MouseMove="TopBar_MouseMove">
                                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{TemplateBinding Title}" Foreground="{DynamicResource TopBarForeground}" Margin="6,0,0,0" VerticalAlignment="Center"
                                                       FontSize="{DynamicResource WindowFontSize}" FontFamily="{DynamicResource WindowFontFamily}"/>
                                            <StackPanel Grid.Column="1" Orientation="Horizontal">
                                                <Button x:Name="MinimizeButton" Style="{DynamicResource MinimizeButton}" Click="OnMinimizeButton_Click" />
                                                <Button x:Name="CloseButton" Style="{DynamicResource CloseButton}" Click="OnCloseButton_Click" Margin="4,0,4,0" />
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Border>
                                
                                <!-- Content Area -->
                                <Border Grid.Row="1" Background="{StaticResource WindowBackground}">
                                    <ContentPresenter Content="{Binding ElementName=WindowContentArea, Path=.}"/>
                                </Border>
                            </Grid>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Style -->
	<Style TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{StaticResource ButtonBackground}" />
		<Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
		<Setter Property="FontFamily" Value="{StaticResource WindowFontFamily}" />
		<Setter Property="FontSize" Value="{StaticResource ButtonFontSize}" />
		<Setter Property="SnapsToDevicePixels" Value="{StaticResource ButtonSnapsToDevicePixels}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />

		<!-- Button Template and Layout -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">

					<!-- Basic Appearance -->
					<Border x:Name="HighlightBorder" CornerRadius="1" BorderThickness="1" 
                            BorderBrush="{StaticResource ButtonBorderBrush}" 
                            Background="{StaticResource ButtonBackground}">
						<Grid>
							<TextBlock x:Name="ButtonText" Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" 
									   HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" 
									   VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" 
									   Margin="0" />
						</Grid>
					</Border>

					<!-- Trigger Appearances -->
					<ControlTemplate.Triggers>

						<!-- Mouse Over -->
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="HighlightBorder" Property="Background" Value="{StaticResource ButtonMouseOverBackground}" />
							<Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ButtonMouseOverForeground}" />
						</Trigger>

						<!-- Mouse Pressed -->
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="HighlightBorder" Property="Background" Value="{StaticResource ButtonMousePressedBackground}" />
							<Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ButtonMousePressedForeground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Window Button Basic Styling -->
    <Style x:Key="WindowButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="20" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0" 
                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Border>
                                <ContentPresenter x:Name="ButtonIcon" Content="{DynamicResource WindowButtonContent}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Border BorderBrush="Black" BorderThickness="0,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonIcon" Property="Content" 
                                    Value="{DynamicResource WindowButtonContentHighlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Minimize Button Style -->
    <Style x:Key="MinimizeButton" TargetType="Button" BasedOn="{StaticResource WindowButton}">
        <Style.Resources>
            <Image x:Key="WindowButtonContent" Source="pack://application:,,,/KeyboardConcerto;Component/Theme/Images/MinimizeButton.png" Width="13" Height="10" />
            <Image x:Key="WindowButtonContentHighlight" Source="pack://application:,,,/KeyboardConcerto;Component/Theme/Images/MiniMizeButtonHighlight.png" Width="13" Height="10" />
        </Style.Resources>
    </Style>

    <!-- Close Button Style -->
    <Style x:Key="CloseButton" TargetType="Button" BasedOn="{StaticResource WindowButton}">
        <Style.Resources>
            <Image x:Key="WindowButtonContent" Source="pack://application:,,,/KeyboardConcerto;Component/Theme/Images/CloseButton.png" Width="13" Height="10" />
            <Image x:Key="WindowButtonContentHighlight" Source="pack://application:,,,/KeyboardConcerto;Component/Theme/Images/CloseButtonHighlight.png" Width="13" Height="10" />
        </Style.Resources>
    </Style>
    
    <Style x:Key="CircleWindowButton" TargetType="Button">
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="14" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse>
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0.8" Color="#FF141414" />
                                    <GradientStop Offset="1" Color="#FF3C3C3C" />
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.Fill>
                                <RadialGradientBrush GradientOrigin="0.5,0.9" Center="0.5,0.8" RadiusX="1" RadiusY="0.8">
                                    <GradientStop Offset="1" Color="#FF1B1B1B" />
                                    <GradientStop Offset="-0.3" Color="#FF3C3C3C" />
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Width="8" Height="8" Stroke="#FF111111">
                            <Ellipse.Fill>
                                <RadialGradientBrush GradientOrigin="0.5,0.9" Center="0.5,0.8" RadiusX="1" RadiusY="0.8">
                                    <GradientStop Offset="0" Color="Gray" />
                                    <GradientStop Offset="1" Color="LightGray" />
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>